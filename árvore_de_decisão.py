# -*- coding: utf-8 -*-
"""Árvore de Decisão.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eLYEd0Lv1MHtzP7kozYQwYY7TAOgraYX
"""

import pandas as pd
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn import tree
import matplotlib.pyplot as plt

# Carregar o arquivo CSV
salary = pd.read_csv('salary_data.csv')

# Selecionar as features e a variável target
features = salary[['lowest_salary', 'highest_salary']]
target = salary['median_salary']

# Dividir os dados em conjunto de treinamento e teste
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.25, random_state=42)

# Criar o regressor da árvore de decisão
regressor = DecisionTreeRegressor(criterion='squared_error', max_depth=3, random_state=42)


# Treinar o modelo
regressor.fit(X_train, y_train)

# Fazer previsões no conjunto de teste
y_pred = regressor.predict(X_test)

# Avaliar o desempenho do modelo
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error (MSE): {mse:.2f}')
print(f'R-squared (R2): {r2:.2f}')

# Visualizar a árvore de decisão (opcional)
plt.figure(figsize=(10, 6))
tree.plot_tree(regressor, filled=True, feature_names=features.columns, rounded=True)
plt.title('Árvore de Decisão para Prever Salário Médio')
plt.show()